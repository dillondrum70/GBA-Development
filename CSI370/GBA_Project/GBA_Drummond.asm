;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
.equ ram, 0x02000000	;RAM on the GBA starts at 0x02000000
.equ CursorX, ram+32	;32 bits past ram start
.equ CursorY, ram+33	;1 bit past CursorX

.org 0x08000000	;GBA ROM (the cartridge) Address starts at 0x08000000

b ProgramStart	;Branch to start of program

;GBA Header
;004h    156   Nintendo Logo    (compressed bitmap, required!)
	.byte 0xC8,0x60,0x4F,0xE2,0x01,0x70,0x8F,0xE2,0x17,0xFF,0x2F,0xE1,0x12,0x4F,0x11,0x48     ; C
	.byte 0x12,0x4C,0x20,0x60,0x64,0x60,0x7C,0x62,0x30,0x1C,0x39,0x1C,0x10,0x4A,0x00,0xF0     ; D
    .byte 0x14,0xF8,0x30,0x6A,0x80,0x19,0xB1,0x6A,0xF2,0x6A,0x00,0xF0,0x0B,0xF8,0x30,0x6B     ; E
    .byte 0x80,0x19,0xB1,0x6B,0xF2,0x6B,0x00,0xF0,0x08,0xF8,0x70,0x6A,0x77,0x6B,0x07,0x4C     ; F
    .byte 0x60,0x60,0x38,0x47,0x07,0x4B,0xD2,0x18,0x9A,0x43,0x07,0x4B,0x92,0x08,0xD2,0x18     ; 10
    .byte 0x0C,0xDF,0xF7,0x46,0x04,0xF0,0x1F,0xE5,0x00,0xFE,0x7F,0x02,0xF0,0xFF,0x7F,0x02     ; 11
    .byte 0xF0,0x01,0x00,0x00,0xFF,0x01,0x00,0x00,0x00,0x00,0x00,0x04,0x00,0x00,0x00,0x00     ; 12
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ; 13
    .byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00     ; 14
	.byte 0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x00,0x1A,0x9E,0x7B,0xEB     ; 15
	
    ;		123456789012
    .ascii "DRUMMOND.NET";0A0h    12    Game Title       (uppercase ascii, max 12 characters)	
    .ascii "0000"	;0ACh    4     Game Code        (uppercase ascii, 4 characters)
    .ascii "00"		;0B0h    2     Maker Code       (uppercase ascii, 2 characters)
	.byte 0x96		;0B2h    1     Fixed value      (must be 96h, required!)
	.byte 0			;0B3h    1     Main unit code   (00h for current GBA models)
	.byte 0			;0B4h    1     Device type      (usually 00h) (bit7=DACS/debug related)
	.space 7		;0B5h    7     Reserved Area    (should be zero filled)
	.byte 0			;0BCh    1     Software version (usually 00h)
	.byte 0			;0BDh    1     Complement check (header checksum, required!)
	.word 0			;0BEh    2     Reserved Area    (should be zero filled)
	.long 0			;0C0h    4     RAM Entry Point  (32bit ARM branch opcode, eg. "B ram_start")
	.byte 0			;0C4h    1     Boot mode        (init as 00h - BIOS overwrites this value!)
	.byte 0			;0C5h    1     Slave ID Number  (init as 00h - BIOS overwrites this value!)
	.space 26		;0C6h    26    Not used         (seems to be unused)
	.long 0			;0E0h    4     JOYBUS Entry Pt. (32bit ARM branch opcode, eg. "B joy_start")

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

ProgramStart:
	mov sp, #0x03000000		;Initialize Stack Pointer, starts at memory address 3000000 on GBA
	
	mov r3, #0x04000000		;DISPCNT - LCD Control
	mov r2, #0x403			;4 = Layer 2 on, 3 = ScreenMode 3 
	str r2, [r3]			;Store layer and screen mode in LCD Control address
	
	ldr r1, AsciiTestAddress	;Load test address into r1, parameter 1
	
	
AsciiTestAddress:
	.LONG Ascii	;Address of Ascii string
	
Ascii:
	.BYTE " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~", 255	;All characters in font, 255 terminated
	.ALIGN 4	;Align to 4 bytes
	
;Starts at ASCII number 32, simplifying by starting at 0
;I translated the Presst Start 2P Google Font into 8-tuples of byte sized hex codes
;This effectively defines an 8x8 bitmap of a character
BitmapFont:
	.BYTE 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00	;0 - Space
	.BYTE 0x70, 0x70, 0x70, 0x60, 0x60, 0x00, 0x60, 0x00	;1 - !
	.BYTE 0x00, 0x66, 0x66, 0x66, 0x00, 0x00, 0x00, 0x00	;2 - "
	.BYTE 0x66, 0xFF, 0x66, 0x66, 0x66, 0x66, 0xFF, 0x66	;3 - #
	.BYTE 0x00, 0x10, 0x7C, 0xD0, 0x7C, 0x16, 0xFC, 0x10	;4 - $
	.BYTE 0x00, 0x62, 0xA4, 0xC8, 0x10, 0x26, 0x4A, 0x8C	;5 - %
	.BYTE 0x00, 0x70, 0xD8, 0xD8, 0x70, 0xDA, 0xCC, 0x7E	;6 - &
	.BYTE 0x00, 0x30, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00	;7 - '
	.BYTE 0x00, 0x0C, 0x18, 0x30, 0x30, 0x30, 0x18, 0x0C	;8 - (
	.BYTE 0x00, 0x30, 0x18, 0x0C, 0x0C, 0x0C, 0x18, 0x30	;9 - )
	.BYTE 0x00, 0x6C, 0x38, 0xFE, 0x38, 0x6C, 0x00, 0x00	;10 - *
	.BYTE 0x00, 0x18, 0x18, 0x7E, 0x7E, 0x18, 0x18, 0x00	;11 - +
	.BYTE 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30, 0x60	;12 - ,
	.BYTE 0x00, 0x00, 0x00, 0x3C, 0x00, 0x00, 0x00, 0x00	;12 - -
	.BYTE 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x30, 0x30	;13 - .
	.BYTE 0x80, 0x40, 0x20, 0x10, 0x08, 0x04, 0x02, 0x01	;14 - /
	.BYTE 0x38, 0x4C, 0xC6, 0xC6, 0xC6, 0xC6, 0x64, 0x38	;15 - 0
	.BYTE 0x00, 0x18, 0x38, 0x18, 0x18, 0x18, 0x18, 0x7E	;16 - 1
	.BYTE 0x00, 0x7C, 0xC6, 0x0E, 0x3C, 0x78, 0xE0, 0xFE	;17 - 2
	.BYTE 0x00, 0x7E, 0x0C, 0x18, 0x3C, 0x06, 0xC6, 0x7C	;18 - 3
	.BYTE 0x00, 0x1C, 0x3C, 0x6C, 0xCC, 0xFE, 0x0C, 0x0C	;19 - 4
	.BYTE 0x00, 0xFC, 0xC0, 0xFC, 0x06, 0x06, 0xC6, 0x7C	;20 - 5
	.BYTE 0x00, 0x3C, 0x60, 0xC0, 0xFC, 0xC6, 0xC6, 0x7C	;21 - 6
	.BYTE 0x00, 0xFE, 0xC6, 0x0C, 0x18, 0x30, 0x30, 0x30	;22 - 7
	.BYTE 0x00, 0x78, 0xC4, 0xE4, 0x78, 0x9E, 0x86, 0x7C	;23 - 8
	.BYTE 0x00, 0x7C, 0xC6, 0xC6, 0x7E, 0x06, 0x0C, 0x78	;24 - 9
	.BYTE 0x00, 0x30, 0x30, 0x00, 0x00, 0x30, 0x30, 0x00	;25 - :
	.BYTE 0x00, 0x30, 0x30, 0x00, 0x30, 0x30, 0x60, 0x00	;26 - ;
	.BYTE 0x00, 0x0C, 0x18, 0x30, 0x18, 0x0C, 0x00, 0x00	;27 - <
	.BYTE 0x00, 0x00, 0x7E, 0x00, 0x7E, 0x00, 0x00, 0x00	;28 - =
	.BYTE 0x00, 0x30, 0x18, 0x0C, 0x18, 0x30, 0x00, 0x00	;29 - >
	.BYTE 0x00, 0x7C, 0xFE, 0xC6, 0x0C, 0x38, 0x00, 0x38	;30 - ?
	.BYTE 0x00, 0x7C, 0x82, 0xBA, 0xAA, 0xBE, 0x80, 0x7C	;31 - @
	.BYTE 0x00, 0x38, 0x6C, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6	;32 - A
	.BYTE 0x00, 0xFC, 0xC6, 0xC6, 0xFC, 0xC6, 0xC6, 0xFC	;33 - B
	.BYTE 0x00, 0x3C, 0x66, 0xC0, 0xC0, 0xC0, 0x66, 0x3C	;34 - C
	.BYTE 0x00, 0xF8, 0xCC, 0xF6, 0xF6, 0xF6, 0xCC, 0xF8	;35 - D
	.BYTE 0x00, 0xFE, 0xC0, 0xC0, 0xFC, 0xC0, 0xC0, 0xFE	;36 - E
	.BYTE 0x00, 0xFE, 0xC0, 0xC0, 0xFC, 0xC0, 0xC0, 0xC0	;37 - F
	.BYTE 0x00, 0x3E, 0x60, 0xC0, 0xCE, 0xC6, 0x66, 0x3E	;38 - G
	.BYTE 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xFE, 0xC6, 0xC6	;39 - H
	.BYTE 0x00, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E	;40 - I
	.BYTE 0x00, 0x06, 0x06, 0x06, 0x06, 0x06, 0xC6, 0x7C	;41 - J
	.BYTE 0x00, 0xC6, 0xCC, 0xD8, 0xF0, 0xF8, 0xDC, 0xCE	;42 - K
	.BYTE 0x00, 0x60, 0x60, 0x60, 0x60, 0x60, 0x60, 0x7E	;43 - L
	.BYTE 0x00, 0xC6, 0xEE, 0xFE, 0xD6, 0xD6, 0xC6, 0xC6	;44 - M
	.BYTE 0x00, 0xC6, 0xE6, 0xF6, 0xDE, 0xFE, 0xC6, 0xC6	;45 - N
	.BYTE 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C	;46 - O
	.BYTE 0x00, 0xFC, 0xC6, 0xC6, 0xC6, 0xFC, 0xC0, 0xC0	;47 - P
	.BYTE 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0xDE, 0xCC, 0x7A	;48 - Q
	.BYTE 0x00, 0xFC, 0xC6, 0xC6, 0xCE, 0xF8, 0xDC, 0xCE	;49 - R
	.BYTE 0x00, 0x7C, 0xC6, 0xC0, 0x7C, 0x06, 0xC6, 0x7E	;50 - S
	.BYTE 0x00, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18	;51 - T
	.BYTE 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0xC6, 0x7C	;52 - U
	.BYTE 0x00, 0xC6, 0xC6, 0xC6, 0xEE, 0x7C, 0x38, 0x10	;53 - V
	.BYTE 0x00, 0xD6, 0xD6, 0xD6, 0xD6, 0xFE, 0xEE, 0x44	;54 - W
	.BYTE 0x00, 0xC6, 0xC6, 0x6C, 0x38, 0x6C, 0xC6, 0xC6	;55 - X
	.BYTE 0x00, 0x66, 0x66, 0x66, 0x3C, 0x18, 0x18, 0x18	;56 - Y
	.BYTE 0x00, 0xFE, 0x0E, 0x1C, 0x38, 0x70, 0xE0, 0xFE	;57 - Z
	.BYTE 0x00, 0x3C, 0x30, 0x30, 0x30, 0x30, 0x30, 0x3C	;58 - [
	.BYTE 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80	;59 - \ 
	.BYTE 0x00, 0x3C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x3C	;60 - ]
	.BYTE 0x00, 0x38, 0x6C, 0x00, 0x00, 0x00, 0x00, 0x00	;61 - ^
	.BYTE 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE	;62 - _
	.BYTE 0x00, 0x10, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00 	;63 - `
	.BYTE 0x00, 0x00, 0x00, 0x7C, 0x06, 0x7E, 0xC6, 0x7E	;64 - a
	.BYTE 0x00, 0xC0, 0xC0, 0xFC, 0xC6, 0xC6, 0xC6, 0x7C	;65 - b
	.BYTE 0x00, 0x00, 0x00, 0x7E, 0xC0, 0xC0, 0xC0, 0x7E	;66 - c
	.BYTE 0x00, 0x06, 0x06, 0x7E, 0xC6, 0xC6, 0xC6, 0x7E	;67 - d
	.BYTE 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xFE, 0xC0, 0x7C	;68 - e
	.BYTE 0x00, 0x0E, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x18	;69 - f
	.BYTE 0x00, 0x00, 0x7E, 0xC6, 0xC6, 0x7E, 0x06, 0x7C	;70 - g
	.BYTE 0x00, 0xC0, 0xC0, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6	;71 - h
	.BYTE 0x00, 0x18, 0x00, 0x38, 0x18, 0x18, 0x18, 0x7E	;72 - i
	.BYTE 0x0C, 0x1C, 0x0C, 0x0C, 0x0C, 0x0C, 0x0C, 0x78	;73 - j
	.BYTE 0x00, 0xC0, 0xC0, 0xC6, 0xCC, 0xF8, 0xCC, 0xC6	;74 - k
	.BYTE 0x00, 0x38, 0x18, 0x18, 0x18, 0x18, 0x18, 0x7E	;75 - l
	.BYTE 0x00, 0x00, 0x00, 0xFC, 0xB6, 0xB6, 0xB6, 0xB6	;76 - m
	.BYTE 0x00, 0x00, 0x00, 0xFC, 0xC6, 0xC6, 0xC6, 0xC6	;77 - n
	.BYTE 0x00, 0x00, 0x00, 0x7C, 0xC6, 0xC6, 0xC6, 0x7C	;78 - o
	.BYTE 0x00, 0x00, 0xFC, 0xC6, 0xC6, 0xFC, 0xC0, 0xC0	;79 - p
	.BYTE 0x00, 0x00, 0x7E, 0xC6, 0xC6, 0x7E, 0x06, 0x06	;80 - q
	.BYTE 0x00, 0x00, 0x00, 0x6E, 0x70, 0x60, 0x60, 0x60	;81 - r
	.BYTE 0x00, 0x00, 0x00, 0x7C, 0xC0, 0x7C, 0x06, 0xFC	;82 - s
	.BYTE 0x00, 0x18, 0x7E, 0x18, 0x18, 0x18, 0x18, 0x18	;83 - t
	.BYTE 0x00, 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0xC6, 0x7E	;84 - u
	.BYTE 0x00, 0x00, 0x00, 0x66, 0x66, 0x66, 0x3C, 0x18	;85 - v
	.BYTE 0x00, 0x00, 0x00, 0xD6, 0xD6, 0xD6, 0xD6, 0x6C	;86 - w
	.BYTE 0x00, 0x00, 0x00, 0xC6, 0x6C, 0x38, 0x6C, 0xC6	;87 - x
	.BYTE 0x00, 0x00, 0xC6, 0xC6, 0xC6, 0x7E, 0x06, 0x7C	;88 - y
	.BYTE 0x00, 0x00, 0x00, 0xFE, 0x1C, 0x38, 0x70, 0xFE	;89 - z
	.BYTE 0x00, 0x0C, 0x18, 0x18, 0x30, 0x18, 0x18, 0x0C	;90 - {
	.BYTE 0x00, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18, 0x18	;91 - |
	.BYTE 0x00, 0x30, 0x18, 0x18, 0x0C, 0x18, 0x18, 0x30	;92 - }
	.BYTE 0x00, 0x00, 0x70, 0xBA, 0x1C, 0x00, 0x00, 0x00	;93 - ~
	;95